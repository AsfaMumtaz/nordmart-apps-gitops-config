apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: stakater-app-sync-and-wait-v1
spec:
  description: >-
    This task syncs application and waits for it to be healthy.
  params:
  - description: Reference of the image tag.
    name: IMAGE_TAG
    type: string
  - description: Reference of the image name.
    name: IMAGE_NAME
    type: string
  - name: repoName
    description: Name of the repository
  - name: timeout
    description: Timeout for waiting for pod
  - name: argoAppPrefix
    description: Argocd applocation name prefix
    default: "NA"
  - name: prNumber
    description: In case of PR, PR number that is to be used in image tag. If this field is empty it means that it's a commit on main branch
    default: "NA"
  steps:
    - name: argo-sync-and-wait
      image: docker.io/argoproj/argocd:v2.2.5
      env:
      - name: ARGOCD_SERVER
        valueFrom:
          secretKeyRef:
            name: argocd-cluster
            key: server
      - name: ARGOCD_USERNAME
        valueFrom:
          secretKeyRef:
            name: argocd-cluster
            key: username
      - name: ARGOCD_PASSWORD
        valueFrom:
          secretKeyRef:
            name: argocd-cluster
            key: password
      script: |
        if [ $(params.prNumber) == "NA" ] && [ ! -f pom.xml ]; then

        argocd login "$ARGOCD_SERVER" --username="$ARGOCD_USERNAME" --password="$ARGOCD_PASSWORD"

        argocd app sync "$(params.argoAppPrefix)-$(params.repoName)"

        argocd app wait "$(params.argoAppPrefix)-$(params.repoName)" --health 

        fi
    - image: 'quay.io/openshift/origin-cli:latest'
      name: sync-and-wait
      script: |
        if [ $(params.prNumber) != "NA" ] && [ ! -f pom.xml ]; then
          while [[ "$SECONDS" -lt $(params.timeout) ]]
          do 
            for pod in $(oc get pod -n pr-$(params.prNumber)-$(params.repoName) -o=jsonpath={.items..metadata.name}); 
            do podImage=$(oc get pod $pod -n pr-$(params.prNumber)-$(params.repoName) -o jsonpath={.spec.containers[*].image}); 
              image=$(params.IMAGE_NAME):$(params.IMAGE_TAG)
              if [ $podImage == $image ]; then
                  readyStatus=$(oc get pods $pod -n pr-$(params.prNumber)-$(params.repoName) -o jsonpath='{.status.containerStatuses[*].ready}')
                  break;
              fi
            done
            if [ $readyStatus == true ]; then
                echo “pod is ready”
                break;
            fi
            echo “waiting for pod” && sleep 3
          done
        else
            echo "Not a PR, wont wait for the pods"
        fi

---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: stakater-e2e-test-v1
spec:
  workspaces:
  - name: source
  params:
  - name: gitorganization
    description: Git organization URL
    default: ""
  - name: gite2erepo
    description: The Directory of E2E
    default: ""
  - name: prNumber
    description: In case of PR, PR number that is to be used in image tag. If this field is empty it means that it's a commit on main branch
    default: "NA"
  - description: Name of the repository
    name: repoName
    type: string
  steps:
  - image: 'stakater/pipeline-toolbox:v0.0.2'
    name: clone
    args:
      - '-c'
      - >
        git clone
        https://${GIT_USERNAME}:${GIT_PASSWORD}@$(params.gitorganization)/$(params.gite2erepo)
    command:
      - /bin/bash        
    env:
      - name: GIT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: git-auth-forked
            key: password
      - name: GIT_USERNAME
        valueFrom:
          secretKeyRef:
            name: git-auth-forked
            key: username
      - name: GIT_EMAIL
        valueFrom:
          secretKeyRef:
            name: git-auth-forked
            key: email
    workingDir: $(workspaces.source.path)
  - image: 'node:16'
    name: e2e
    script: |
      if [ ! -f pom.xml ]; then
        cd $(params.gite2erepo)
        apt-get update
        apt-get install -y chromium tzdata
        cp /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
        yarn install
        if [ $(params.prNumber) != "NA" ]; then
          yarn run start ci https://review-web-pr-$(params.prNumber)-$(params.repoName).apps.devtest.vxdqgl7u.kubeapp.cloud 
        else
          yarn run start ci
        fi
      fi
    workingDir: $(workspaces.source.path)
